name: Notification Worker CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check formatting
      run: npm run format -- --check
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run typecheck
    
    - name: Test
      run: npm test
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifact
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  
  deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Google Container Registry
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/notification-worker:${{ github.sha }}
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/notification-worker:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: notification-worker
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/notification-worker:${{ github.sha }}
        region: us-central1
        flags: |
          --memory=512Mi
          --cpu=1
          --concurrency=50
          --timeout=60s
          --set-env-vars=NODE_ENV=production,PUBSUB_SUBSCRIPTION=${{ secrets.PUBSUB_SUBSCRIPTION }},DLQ_TOPIC=${{ secrets.DLQ_TOPIC }}
          --add-cloudsql-instances=${{ secrets.GCP_PROJECT_ID }}:us-central1:nifya-db
          --service-account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          --allow-unauthenticated
    
    - name: Test deployment
      run: |
        echo "Testing deployment at ${{ steps.deploy.outputs.url }}/health"
        curl -f ${{ steps.deploy.outputs.url }}/health || exit 1